Основа - матрица размером M x N, где M и N задаются пользователем
Класс Field - двумерный вектор (матрица) объектов класса Gem
Класс Gem - квадрат заданных размеров, имеет один из цветов из спектра, родитель класса Bonus

ToDo list:
Создать класс Field
+Добавить параметры: вектор векторов объектов Gem gemsMatrix, colorsSpectre из 6 цветов(красный, синий, зелёный, жёлтый, cyan, magenta), высота и ширина поля, gemsInRow, gemsInColumn - размеры поля в гемах
+Сделать конструктор Field принимающий объект окна sf::RenderWindow, значения для gemsInRow и gemsInColumn, чтобы получить высоту и ширину окна, инициализировать двумерный вектор объектами Gem

Создать класс Gem
+Добавить параметры высоты и ширины, цвета текущего гема, спектр брать из класса Field
+Сделать конструктор Gem, который будет вызываться в конструкторе Field 
Исходя из этого, конструктор Gem сразу принимает новые значения, которые вычисляются в конструкторе Field, чтобы избежать проблем со связыванием классов
Таким образом, класс Field использует класс Gem, а класс Gem никак не использует класс Field

Работа с полем
+Сделать метод отрисовки Gem, принимающий текущие координаты
В SFML отрисовка идёт с левого верхнего угла объекта. При желании это можно поменять, но оставим как есть
+Протестировать корректность метода
+Сделать метод отрисовки игрового поля, вызывая метод отрисовки для Gem с текущими координатами
+Протестировать в Main Loop что корректно рисуется всё поле
+Добавить outline для каждого гема как среднее арифметическое длины и высоты делённое на 10
+Добавить рандомную генерацию цветов в поле
+Сделать поле зависимым от числа гемов и разрешения окна

Игровой процесс
+Сделать проверку поля и удаление 3 и более соседних гемов одного цвета
+Сделать функцию Drop для того, чтобы после удаления, пустые места занимались гемами сверху
+Сделать функцию заполнения поля, когда Drop больше невозможен
-Сделать функцию выбора гема с помощью навигации по полю
-Сделать функцию Swap для двух квадратов

-Собрать полноценный Game Loop из частей игрового процесса и протестировать основной функционал
